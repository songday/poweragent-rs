"use strict";class DialogFlowAiSDK{constructor(t){this.url=t.url,this.timeoutSec=t.timeoutSec||10,this.mainFlowId=t.mainFlowId,this.robotId=t.robotId,this.chatHistory=t.chatHistory||[],this.version=1,this.sessionId=t.sessionId||this.newSessionId(),this.importVariables=[],this.chatHasEnded=!1}VarKind=Object.freeze({STRING:"String",NUMBER:"Number"});UserInputResult=Object.freeze({SUCCESSFUL:"Successful",TIMEOUT:"Timeout"});MessageKind=Object.freeze({PLAIN_TEXT:"PlainText",RICH_TEXT:"RichText",IMAGE:"Timeout"});newSessionId(){return Date.now().toString()+Math.random().toString(16)}genRequestBody(t,e){const n=this;return{robotId:n.robotId,mainFlowId:n.mainFlowId,sessionId:this.sessionId,userInputResult:null,userInput:t||"",importVariables:n.importVariables.splice(0,n.importVariables.length),userInputIntent:e}}appendImportVariable(t,e,n){if(!this.VarKind[n])throw new Error(`Invalid variable kind: ${n}`);const s={varName:t,varType:n,varVal:e};this.importVariables.push(s)}correctData(t){if(!this.url)throw new Error("Missing parameter: url");if(!this.robotId)throw new Error("Missing parameter: robotId");if(!this.mainFlowId)throw new Error("Missing parameter: mainFlowId");if(null==t.sessionId)throw new Error("Missing parameter: sessionId");null==t.userInput&&(t.userInput=""),null==t.userInputResult&&(t.userInputResult=0==this.chatHistory.length||t.userInput.length>0?this.UserInputResult.SUCCESSFUL:this.UserInputResult.FAILED),null==t.importVariables&&(t.importVariables=[]),null!=t.userInputIntent&&""==t.userInputIntent&&(t.userInputIntent=null)}addChat(t,e,n,s){if(s&&s>-1){if(!(s>=this.chatHistory.length))return this.chatHistory[s].text+=t,s;for(let t=this.chatHistory.length;t<s;t++)this.chatHistory.push({id:"chat-"+Math.random().toString(16),text:"",textSource:e,answerType:n})}return this.chatHistory.push({id:"chat-"+Math.random().toString(16),text:t.trimStart(),textSource:e,answerType:n}),this.chatHistory.length-1}appendAnswers(t,e){if(console.log(t),200==t.status){console.log("data.nextAction:",t.data.nextAction);const n=t.data,s=n.answers;let r=-1;if(null!=s)for(let t=0;t<s.length;t++)r=this.addChat(s[t].content,"responseText",s[t].contentType,e);return"Terminate"===n.nextAction&&(this.chatHasEnded=!0),{chatIdx:r}}throw new Error(`Error: ${t.err.message}`)}async sendMessage(t){const e=this,n=e.genRequestBody(t.content,null);e.correctData(n),t.content&&e.addChat(t.content,"userText",t.type,-1);var s=new AbortController,r=setTimeout(function(){s.abort()},1e3*e.timeoutSec);console.log("Request body:",JSON.stringify(n));const o=await fetch(e.url,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n),signal:s.signal});if(clearTimeout(r),console.log("Response:",o),!o.ok)throw new Error("Network response was not ok");const a=o.headers.get("content-type")||"";if(a.includes("text/event-stream")||a.includes("application/x-ndjson")||a.includes("text/plain")){const t=o.body.getReader(),n=new TextDecoder("utf-8"),s=new ReadableStream({async start(e){for(;;){const{done:s,value:r}=await t.read();if(s)break;e.enqueue(n.decode(r,{stream:!0}))}e.close()}}),r=s.getReader();let{value:a,done:i}=await r.read(),l=-1;for(;!i;)console.log("chunk:",a),null!=a&&0!=a.trim().length&&(a.substring(1,a.length-1).split("}{").forEach(t=>{if(t.trim().length>0){console.log("line:",t);const n=JSON.parse("{"+t+"}");if(Object.hasOwn(n,"contentSeq")&&null!==n.contentSeq)e.appendAnswers({status:200,data:{answers:[{content:n.content}]}},n.contentSeq);else{const t=e.appendAnswers({status:200,data:JSON.parse(n.content)},l);l=t.chatIdx}}}),({value:a,done:i}=await r.read()))}else{const t=await o.json();console.log("Response data:",t),e.appendAnswers(t,-1)}}}export{DialogFlowAiSDK};